auto		printf("%s Keyword TAuto %i",yytext,linenum);
double		printf("%s Keyword TDouble %i",yytext,linenum);
int			printf("%s Keyword TInt %i",yytext,linenum);
struct		printf("%s Keyword TStruct %i",yytext,linenum);
break		printf("%s Keyword TBreak %i",yytext,linenum);
else		printf("%s Keyword TElse %i",yytext,linenum);
long		printf("%s Keyword TLong %i",yytext,linenum);
switch		printf("%s Keyword TSwitch %i",yytext,linenum);
case		printf("%s Keyword TCase %i",yytext,linenum);
enum		printf("%s Keyword TEnum %i",yytext,linenum);
register	printf("%s Keyword TRegister %i",yytext,linenum);
typedef		printf("%s Keyword TTypedef %i",yytext,linenum);
char		printf("%s Keyword TChar %i",yytext,linenum);
extern		printf("%s Keyword TExtern %i",yytext,linenum);
return		printf("%s Keyword TReturn %i",yytext,linenum);
union		printf("%s Keyword TUnion %i",yytext,linenum);
const		printf("%s Keyword TConst %i",yytext,linenum);
float		printf("%s Keyword TFloat %i",yytext,linenum);
short		printf("%s Keyword TShort %i",yytext,linenum);
unsigned	printf("%s Keyword TUnsigned %i",yytext,linenum);
continue	printf("%s Keyword TContinue %i",yytext,linenum);
for			printf("%s Keyword TFor %i",yytext,linenum);
signed		printf("%s Keyword TSigned %i",yytext,linenum);
void		printf("%s Keyword TVoid %i",yytext,linenum);
default		printf("%s Keyword TDefault %i",yytext,linenum);
goto		printf("%s Keyword TGoto %i",yytext,linenum);
sizeof		printf("%s Keyword TSizeof %i",yytext,linenum);
volatile	printf("%s Keyword TVolatile %i",yytext,linenum);
do			printf("%s Keyword TDo %i",yytext,linenum);
if			printf("%s Keyword TIf %i",yytext,linenum);
static		printf("%s Keyword TStatic %i",yytext,linenum);
while		printf("%s Keyword TWhile %i",yytext,linenum);
