auto		printf("\n %s Keyword %i", yytext, linenum);
double		printf("\n %s Keyword %i", yytext, linenum);
int			printf("\n %s Keyword %i", yytext, linenum);
struct		printf("\n %s Keyword %i", yytext, linenum);
break		printf("\n %s Keyword %i", yytext, linenum);
else		printf("\n %s Keyword %i", yytext, linenum);
long		printf("\n %s Keyword %i", yytext, linenum);
switch		printf("\n %s Keyword %i", yytext, linenum);
case		printf("\n %s Keyword %i", yytext, linenum);
enum		printf("\n %s Keyword %i", yytext, linenum);
register	printf("\n %s Keyword %i", yytext, linenum);
typedef		printf("\n %s Keyword %i", yytext, linenum);
char		printf("\n %s Keyword %i", yytext, linenum);
extern		printf("\n %s Keyword %i", yytext, linenum);
return		printf("\n %s Keyword %i", yytext, linenum);
union		printf("\n %s Keyword %i", yytext, linenum);
const		printf("\n %s Keyword %i", yytext, linenum);
float		printf("\n %s Keyword %i", yytext, linenum);
short		printf("\n %s Keyword %i", yytext, linenum);
unsigned	printf("\n %s Keyword %i", yytext, linenum);
continue	printf("\n %s Keyword %i", yytext, linenum);
for			printf("\n %s Keyword %i", yytext, linenum);
signed		printf("\n %s Keyword %i", yytext, linenum);
void		printf("\n %s Keyword %i", yytext, linenum);
default		printf("\n %s Keyword %i", yytext, linenum);
goto		printf("\n %s Keyword %i", yytext, linenum);
sizeof		printf("\n %s Keyword %i", yytext, linenum);
volatile	printf("\n %s Keyword %i", yytext, linenum);
do			printf("\n %s Keyword %i", yytext, linenum);
if			printf("\n %s Keyword %i", yytext, linenum);
static		printf("\n %s Keyword %i", yytext, linenum);
while		printf("\n %s Keyword %i", yytext, linenum);
